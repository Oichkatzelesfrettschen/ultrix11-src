Mmain	main.c	/^main(argc, argv)$/
OYcopy	yycopy.c	/^OYcopy ()$/
Perror	subr.c	/^Perror(file, error)$/
a8tol	ato.c	/^a8tol(cp)$/
addlist	yytree.c	/^addlist(vroot, new)$/
alph	yy.h	/^#define alph(c)		((c >= 'a' && c <= 'z') || (c >= /
any	subr.c	/^any(cp, ch)$/
arycod	lval.c	/^arycod(np, el)$/
aryconst	var.c	/^long aryconst(np, n)$/
asgnop	stat.c	/^asgnop(r)$/
asgnop1	stat.c	/^asgnop1(r, p)$/
asrtop	stat.c	/^asrtop(r)$/
brerror	yyerror.c	/^brerror(where, what)$/
bytes	var.c	/^bytes(lb, ub)$/
call	call.c	/^call(p, argv, porf, psbn)$/
calloc	subr.c	/^calloc(num, size)$/
caseop	case.c	/^caseop(r)$/
cerror	error.c	/^cerror(a1, a2, a3, a4)$/
charname	yyprint.c	/^charname(ch , which )$/
classify	clas.c	/^classify(p1)$/
codeoff	0.h	/^#define	codeoff()	--cgenflg$/
codeon	0.h	/^#define	codeon()	cgenflg++$/
commform	yy.h	/^#define	commform()	quickcomm(CFORM)$/
commnl	yy.h	/^#define	commnl()	quickcomm(CNL)$/
commnlbl	yy.h	/^#define	commnlbl()	quickcomm(CNLBL)$/
compat	conv.c	/^compat(p1, p2, t)$/
const	const.c	/^const(cline, cid, cdecl)$/
constbeg	const.c	/^constbeg()$/
constend	const.c	/^constend()$/
conv	conv.c	/^conv(dub)$/
convert	conv.c	/^convert(p1, p2)$/
copy	subr.c	/^copy(to, from, bytes)$/
copyfile	yymain.c	/^copyfile()$/
copystr	tree.c	/^copystr(token)$/
correct	yyrecover.c	/^correct(fchar, origin, c, multvec, Ps0, Pv0)$/
cset	cset.c	/^cset(r, settype, x)$/
deffld	rec.c	/^deffld(p, s, t)$/
defnl	nl.c	/^defnl(sym, cls, typ, val)$/
defvnt	rec.c	/^defvnt(p, t, vr, ct)$/
delcost	yycosts.c	/^delcost(what)$/
derror	error.c	/^derror(a1, a2, a3, a4)$/
digit	yy.h	/^#define digit(c)	(c >= '0' && c <= '9')$/
dotted	subr.c	/^dotted(fp, c)$/
dumpnl	nl.c	/^dumpnl(to, rout)$/
eholdnl	0.h	/^#define	eholdnl()	Eholdnl = 1$/
elineoff	0.h	/^#define	elineoff()	Enoline++$/
elineon	0.h	/^#define	elineon()	Enoline = 0$/
enter	nl.c	/^enter(np)$/
error	error.c	/^error(a1, a2, a3, a4)$/
esavestr	string.c	/^esavestr(cp)$/
even	var.c	/^even(w)$/
evenit	string.c	/^evenit()$/
fields	rec.c	/^fields(p, r)$/
fixlist	yytree.c	/^fixlist(vroot)$/
foredecl	type.c	/^foredecl()$/
forop	stat.c	/^forop(r)$/
funcbody	fdec.c	/^funcbody(fp)$/
funccod	func.c	/^funccod(r)$/
funcend	fdec.c	/^funcend(fp, bundle, endline)$/
funcfwd	fdec.c	/^funcfwd(fp)$/
funchdr	fdec.c	/^funchdr(r)$/
gconst	const.c	/^gconst(r)$/
gen	gen.c	/^gen(p, o, w1, w2)$/
genmx	gen.c	/^genmx()$/
geterr	main.c	/^geterr(seekpt, buf)$/
getlab	put.c	/^getlab()$/
getline	yyget.c	/^getline()$/
gettime	subr.c	/^gettime()$/
gotoop	lab.c	/^gotoop(s)$/
graphic	yyput.c	/^graphic(ch)$/
gtype	type.c	/^gtype(r)$/
hash	hash.c	/^int *hash(s, save)$/
hdefnl	nl.c	/^hdefnl(sym, cls, typ, val)$/
header	main.c	/^header()$/
identis	yyid.c	/^identis(cp, kind)$/
ifop	stat.c	/^ifop(r)$/
includ	yyget.c	/^includ()$/
inithash	hash.c	/^inithash()$/
initnl	nl.c	/^initnl()$/
initstring	string.c	/^initstring()$/
inittree	tree.c	/^inittree()$/
inpflist	subr.c	/^inpflist(fp)$/
inscost	yycosts.c	/^inscost(sy, before)$/
isa	clas.c	/^isa(p, s)$/
isconst	const.c	/^isconst(r)$/
isnta	clas.c	/^isnta(p, s)$/
label	lab.c	/^label(r, l)$/
labeled	lab.c	/^labeled(s)$/
loccor	yyrecover.c	/^loccor(ps, ntok)$/
lookup	lookup.c	/^lookup(s)$/
lookup1	lookup.c	/^lookup1(s)$/
lptr	lval.c	/^lptr(c)$/
lvalue	lval.c	/^lvalue(r, modflag)$/
lwidth	var.c	/^long lwidth(np)$/
magic	yymain.c	/^magic()$/
magic2	yymain.c	/^magic2()$/
myctime	subr.c	/^myctime(tv)$/
nameof	clas.c	/^nameof(p)$/
nerror	fdec.c	/^nerror(a1, a2, a3)$/
newlist	yytree.c	/^newlist(new)$/
nlcopy	nl.c	/^nlcopy(p)$/
nlfree	nl.c	/^nlfree(p)$/
nlfund	lookup.c	/^nlfund(sp)$/
nloff	nl.c	/^nloff(p)$/
nocascade	0.h	/^#define	nocascade()	Enocascade = 1$/
nocomp	rval.c	/^nocomp(c)$/
norange	type.c	/^norange(p)$/
nowexp	clas.c	/^nowexp(r)$/
nullsem	yyseman.c	/^nullsem(ch)$/
onintr	main.c	/^onintr()$/
opop	subr.c	/^opop(c)$/
opt	0.h	/^#define opt(c) opts[c-'a']$/
options	yyoptions.c	/^options()$/
opush	subr.c	/^opush(c)$/
panic	error.c	/^panic(s)$/
patch	put.c	/^patch(loc)$/
patchfil	put.c	/^patchfil(loc, value)$/
pchr	main.c	/^pchr(c)$/
pexit	main.c	/^pexit(c)$/
pflush	put.c	/^pflush()$/
pnums	fdec.c	/^pnums(p)$/
proc	proc.c	/^proc(r)$/
put	put.c	/^put(a)$/
put1	putn.c	/^put1 ( arg1 )$/
put2	putn.c	/^put2 ( arg1 , arg2 )$/
put3	putn.c	/^put3 ( arg1 , arg2 , arg3 )$/
put4	putn.c	/^put4 ( arg1 , arg2 , arg3 , arg4 )$/
putcnt	stat.c	/^putcnt()$/
putlab	put.c	/^putlab(l)$/
putline	stat.c	/^putline()$/
putspace	put.c	/^putspace(n)$/
rangechk	conv.c	/^rangechk(p, q)$/
rdops	proc.c	/^#define rdops(x) rdxxxx[(x)-(TFIRST)]$/
readch	yyget.c	/^readch()$/
reclook	rec.c	/^reclook(p, s)$/
recovered	0.h	/^#define	recovered()	setpfx('e')$/
repcost	yycosts.c	/^repcost(what, with)$/
repop	stat.c	/^repop(r)$/
return	pas.y	/^= @@ return (identis(var, CONST));$/
rvalue	rval.c	/^rvalue(r, contype)$/
rvlist	call.c	/^rvlist(al)$/
savestr	string.c	/^savestr(cp)$/
scalar	clas.c	/^scalar(p1)$/
setpfx	0.h	/^#define	setpfx(x)	errpfx = x$/
setran	var.c	/^setran(q)$/
setuflg	yylex.c	/^setuflg()$/
setupvar	yytree.c	/^setupvar(var, init)$/
skipbl	yyget.c	/^skipbl(ocp)$/
soffset	string.c	/^soffset(cp)$/
sreloc	string.c	/^sreloc(i)$/
standard	0.h	/^#define	standard()	setpfx('s')$/
statement	stat.c	/^statement(r)$/
statlist	stat.c	/^statlist(r)$/
strcmp	subr.c	/^strcmp(s1, s2)$/
strcpy	subr.c	/^strcpy(s1, s2)$/
text	clas.c	/^text(p)$/
togopt	subr.c	/^togopt(c)$/
tokname	yyprint.c	/^tokname(tp , which )$/
tralloc	tree.c	/^tralloc(howmuch)$/
tree	tree.c	/^int *tree(cnt, a)$/
tree1	treen.c	/^tree1 ( arg1 )$/
tree2	treen.c	/^tree2 ( arg1 , arg2 )$/
tree3	treen.c	/^tree3 ( arg1 , arg2 , arg3 )$/
tree4	treen.c	/^tree4 ( arg1 , arg2 , arg3 , arg4 )$/
tree5	treen.c	/^tree5 ( arg1 , arg2 , arg3 , arg4 , arg5 )$/
trfree	tree.c	/^trfree()$/
trystate	yyrecover.c	/^trystate(Ps0, Pv0, flag, insmult, delmult, repmult/
tyary	type.c	/^tyary(r)$/
type	type.c	/^type(tline, tid, tdecl)$/
typebeg	type.c	/^typebeg()$/
typeend	type.c	/^typeend()$/
tyrang	type.c	/^tyrang(r)$/
tyrec	rec.c	/^tyrec(r, off)$/
tyrec1	rec.c	/^tyrec1(r, off, first)$/
tyscal	type.c	/^tyscal(r)$/
ungoto	stat.c	/^ungoto()$/
uninclud	yyget.c	/^uninclud()$/
uniqv	rec.c	/^uniqv(p)$/
unyylex	yylex.c	/^unyylex(y)$/
var	var.c	/^var(vline, vidl, vtype)$/
varbeg	var.c	/^varbeg()$/
varend	var.c	/^varend()$/
variants	rec.c	/^variants(p, r)$/
warning	0.h	/^#define	warning()	setpfx('w')$/
whilop	stat.c	/^whilop(r)$/
width	var.c	/^width(np)$/
withop	stat.c	/^withop(s)$/
word	put.c	/^word(o)$/
writef	yymain.c	/^writef(i, cp)$/
wrops	proc.c	/^#define wrops(x) wrxxxx[(x)-(TFIRST)]$/
yerror	yyerror.c	/^yerror(s, a1, a2, a3, a4, a5)$/
yyPerror	yypanic.c	/^yyPerror(cp, kind)$/
yySsync	yyput.c	/^yySsync()$/
yybadref	yyid.c	/^yybadref(p, line)$/
yybaduse	yyid.c	/^yybaduse(cp, line, kindmask)$/
yycosts	yycosts.c	/^yycosts()$/
yydocost	yycosts.c	/^yydocost(c)$/
yyexeof	yyrecover.c	/^yyexeof()$/
yyflush	yyput.c	/^yyflush()$/
yygetline	yyput.c	/^yygetline(efile, seekp, eline, eseqid)$/
yyidok	yyid.c	/^yyidok(p, kind)$/
yyidok1	yyid.c	/^yyidok1(p, kind)$/
yyisvar	yyid.c	/^yyisvar(p, class)$/
yylex	yylex.c	/^yylex()$/
yymain	yymain.c	/^yymain()$/
yyoutfl	yyput.c	/^yyoutfl(toseqid)$/
yyoutline	yyput.c	/^yyoutline()$/
yyparse	yyparse.c	/^yyparse()$/
yyprintf	yyput.c	/^yyprintf(cp, line)$/
yyprline	yyput.c	/^yyprline(buf, line, file, id)$/
yyputfn	yyput.c	/^yyputfn(cp)$/
yyrecover	yyrecover.c	/^yyrecover(Ps0, idfail)$/
yyresume	yy.h	/^#define	yyresume()	yyResume = 1;$/
yyretrieve	yyput.c	/^yyretrieve()$/
yyset	yylex.c	/^yyset()$/
yysetfile	error.c	/^yysetfile(name)$/
yysync	yyput.c	/^yysync()$/
yyunexeof	yyrecover.c	/^yyunexeof()$/

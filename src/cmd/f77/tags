Copyright	fltused.s	/^\/   Copyright (c) Digital Equipment Corporation 19/
ICONEQ	expr.c	/^#define ICONEQ(z, c)  (ISICON(z) && z->constblock./
Lineno	error.c	/^Lineno(n)$/
Mdriver	driver.c	/^main(argc, argv)$/
Mmain	main.c	/^main(argc, argv)$/
V	io.c	/^#define V(z)	ioc[z].iocval$/
addreg	pdp11.c	/^addreg(k)$/
addressable	misc.c	/^addressable(p)$/
addrof	expr.c	/^struct Exprblock *addrof(p)$/
analyz	lex.c	/^LOCAL analyz()$/
autovar	proc.c	/^struct Addrblock *autovar(nelt, t, lengp)$/
await	driver.c	/^await(waitpid)$/
badfile	error.c	/^badfile(s)$/
builtin	misc.c	/^struct Addrblock *builtin(t, s)$/
call0	misc.c	/^struct Exprblock *call0(type, name)$/
call1	misc.c	/^struct Exprblock *call1(type, name, arg)$/
call2	misc.c	/^struct Exprblock *call2(type, name, arg1, arg2)$/
call3	misc.c	/^struct Exprblock *call3(type, name, arg1, arg2, ar/
call4	misc.c	/^struct Exprblock *call4(type, name, arg1, arg2, ar/
callk	misc.c	/^struct Exprblock *callk(type, name, args)$/
ckalloc	misc.c	/^ptr ckalloc(n)$/
cktype	expr.c	/^cktype(op, lt, rt)$/
clf	main.c	/^clf(p)$/
clfiles	main.c	/^LOCAL clfiles()$/
cmpstr	misc.c	/^cmpstr(a, b, la, lb)	\/* compare two strings *\/$/
comblock	proc.c	/^struct Extsym *comblock(len, s)$/
consbinop	expr.c	/^LOCAL consbinop(opcode, type, cp, ap, bp)$/
consconv	expr.c	/^consconv(lt, lv, rt, rv)$/
consnegop	expr.c	/^consnegop(p)$/
conspower	expr.c	/^LOCAL conspower(powp, ap, n)$/
conssgn	expr.c	/^conssgn(p)$/
content	driver.c	/^content(filename)$/
convcd	misc.c	/^double convcd(n, s)$/
convci	misc.c	/^ftnint convci(n, s)$/
convic	misc.c	/^char *convic(n)$/
copyn	misc.c	/^char *copyn(n, s)$/
copys	misc.c	/^char *copys(s)$/
cpblock	misc.c	/^ptr cpblock(n,p)$/
cpexpr	expr.c	/^tagptr cpexpr(p)$/
cpn	misc.c	/^cpn(n, a, b)$/
crfnames	driver.c	/^crfnames()$/
crunch	lex.c	/^LOCAL crunch()$/
dataline	data.c	/^dataline(varname, offset, vlen, type)$/
dataname	data.c	/^char *dataname(stg,memno)$/
dataval	data.c	/^dataval(repp, valp)$/
dclerr	error.c	/^dclerr(s, v)$/
debug_table	misc.c	/^debug_table()	\/* Warning - don't change strings be/
deregister	expr.c	/^deregister(np)$/
doasm	driver.c	/^doasm(s)$/
dobss	proc.c	/^LOCAL dobss()$/
docomleng	proc.c	/^LOCAL docomleng()$/
docommon	proc.c	/^LOCAL docommon()$/
dodata	driver.c	/^dodata()$/
doentry	proc.c	/^LOCAL doentry(ep)$/
doequiv	equiv.c	/^doequiv()$/
doeven	driver.c	/^ftnint doeven(tot, align)$/
doext	proc.c	/^doext()$/
dofclose	io.c	/^LOCAL dofclose()$/
dofinquire	io.c	/^LOCAL dofinquire()$/
dofmove	io.c	/^LOCAL dofmove(subname)$/
dofopen	io.c	/^LOCAL dofopen()$/
dofort	driver.c	/^dofort(s)$/
doinclude	lex.c	/^doinclude(name)$/
doio	io.c	/^doio(list)$/
doiolist	io.c	/^LOCAL doiolist(p0)$/
doload	driver.c	/^doload(v0, v)$/
done	main.c	/^done(k)$/
donmlist	proc.c	/^donmlist()$/
dopass2	driver.c	/^dopass2()$/
dotchar	driver.c	/^dotchar(s)$/
enbint	driver.c	/^enbint(k)$/
enddcl	proc.c	/^enddcl()$/
enddo	exec.c	/^enddo(here)$/
endio	io.c	/^endio()$/
endioctl	io.c	/^endioctl()$/
endproc	proc.c	/^endproc()$/
enregister	expr.c	/^enregister(np)$/
entrypt	proc.c	/^entrypt(class, type, length, entry, args)$/
epicode	proc.c	/^LOCAL epicode()$/
eqn	misc.c	/^eqn(n, a, b)$/
eqvcommon	equiv.c	/^LOCAL eqvcommon(p, comno, comoffset)$/
eqveqv	equiv.c	/^LOCAL eqveqv(nvarno, ovarno, delta)$/
err	error.c	/^err(s)$/
err66	error.c	/^err66(s)$/
errext	error.c	/^errext(s)$/
erri	error.c	/^erri(s,t)$/
errnode	expr.c	/^struct Errorblock *errnode()$/
error	error.c	/^error(index,type,a,b)$/
errstr	error.c	/^errstr(s, t)$/
exar2	exec.c	/^LOCAL exar2(op, e, l1, l2)$/
exarif	exec.c	/^exarif(expr, neglab, zerlab, poslab)$/
exasgoto	exec.c	/^exasgoto(labvar)$/
exassign	exec.c	/^exassign(vname, labelval)$/
excall	exec.c	/^excall(name, args, nstars, labels)$/
exdo	exec.c	/^exdo(range, spec)$/
execerr	error.c	/^execerr(s, n)$/
execlab	misc.c	/^struct Labelblock *execlab(stateno)$/
exelif	exec.c	/^exelif(p)$/
exelse	exec.c	/^exelse()$/
exendif	exec.c	/^exendif()$/
exequals	exec.c	/^exequals(lp, rp)$/
exgoto	exec.c	/^exgoto(lab)$/
exif	exec.c	/^exif(p)$/
exreturn	exec.c	/^exreturn(p)$/
exstop	exec.c	/^exstop(stop, p)$/
fatal	error.c	/^fatal(t)$/
fatali	error.c	/^fatali(t,d)$/
fatalstr	error.c	/^fatalstr(t,s)$/
fileinit	init.c	/^fileinit()$/
fixargs	expr.c	/^fixargs(doput, p0)$/
fixexpr	expr.c	/^expptr fixexpr(p)$/
fixtype	expr.c	/^expptr fixtype(p)$/
flline	lex.c	/^flline()$/
flovflo	main.c	/^flovflo()$/
fmtstmt	io.c	/^fmtstmt(lp)$/
fname	driver.c	/^LOCAL fname(name, suff)$/
fold	expr.c	/^LOCAL expptr fold(e)$/
frchain	misc.c	/^frchain(p)$/
frdata	data.c	/^frdata(p0)$/
freqchain	equiv.c	/^LOCAL freqchain(p)$/
frexpr	expr.c	/^frexpr(p)$/
frrpl	misc.c	/^frrpl()$/
frtemp	proc.c	/^frtemp(p)$/
getcd	lex.c	/^LOCAL getcd(b)$/
getcds	lex.c	/^LOCAL getcds()$/
getkwd	lex.c	/^LOCAL getkwd()$/
gettok	lex.c	/^LOCAL gettok()$/
goret	pdp11.c	/^goret(type)$/
hextoi	misc.c	/^hextoi(c)$/
hookup	misc.c	/^chainp hookup(x,y)$/
iarrlen	proc.c	/^ftnint iarrlen(q)$/
imagpart	put.c	/^struct Addrblock *imagpart(p)$/
impldcl	expr.c	/^impldcl(p)$/
incomm	proc.c	/^incomm(c, v)$/
inilex	lex.c	/^inilex(name)$/
initkey	lex.c	/^initkey()$/
inline	intr.c	/^struct Exprblock *inline(fno, type, args)$/
inregister	expr.c	/^inregister(np)$/
intdouble	putdmr.c	/^LOCAL struct Addrblock *intdouble(p, ncommap)$/
intraddr	intr.c	/^struct Addrblock *intraddr(np)$/
intrcall	intr.c	/^struct Exprblock *intrcall(np, argsp, nargs)$/
intrfunct	intr.c	/^intrfunct(s)$/
intrupt	driver.c	/^intrupt()$/
ioclause	io.c	/^ioclause(n, p)$/
iocname	io.c	/^iocname()$/
ioset	io.c	/^LOCAL ioset(type, offset, p)$/
ioseta	io.c	/^LOCAL ioseta(offset, p)$/
iosetc	io.c	/^LOCAL iosetc(offset, p)$/
iosetip	io.c	/^LOCAL iosetip(i, offset)$/
iosetlc	io.c	/^LOCAL iosetlc(i, offp, offl)$/
isaddr	misc.c	/^isaddr(p)$/
isstatic	misc.c	/^isstatic(p)$/
lastchar	driver.c	/^char *lastchar(s)$/
lastfield	driver.c	/^char *lastfield(s)$/
lengtype	proc.c	/^lengtype(type, length)$/
letter	expr.c	/^LOCAL letter(c)$/
lexline	lex.c	/^char *lexline(n)$/
lmax	misc.c	/^ftnint lmax(a, b)$/
lmin	misc.c	/^ftnint lmin(a, b)$/
log2	misc.c	/^log2(n)$/
many	error.c	/^many(s, c)$/
max	misc.c	/^max(a,b)$/
maxtype	misc.c	/^maxtype(t1, t2)$/
memname	pdp11.c	/^char *memname(stg, mem)$/
memversion	expr.c	/^struct Addrblock *memversion(np)$/
mkaddcon	expr.c	/^struct Constblock *mkaddcon(l)$/
mkaddr	expr.c	/^struct Addrblock *mkaddr(p)$/
mkarg	expr.c	/^mkarg(type, argno)$/
mkbitcon	expr.c	/^struct Constblock *mkbitcon(shift, leng, s)$/
mkchain	misc.c	/^chainp mkchain(p,q)$/
mkconst	expr.c	/^struct Constblock *mkconst(t)$/
mkconv	expr.c	/^expptr mkconv(t, p)$/
mkcxcon	expr.c	/^struct Constblock *mkcxcon(realp,imagp)$/
mkexpr	expr.c	/^expptr mkexpr(opcode, lp, rp)$/
mkext	misc.c	/^struct Extsym *mkext(s)$/
mkfunct	expr.c	/^expptr mkfunct(p)$/
mkintcon	expr.c	/^struct Constblock *mkintcon(l)$/
mkiodo	misc.c	/^struct Impldoblock *mkiodo(dospec, list)$/
mklabel	misc.c	/^struct Labelblock *mklabel(l)$/
mklhs	expr.c	/^struct Addrblock *mklhs(p)$/
mklist	misc.c	/^struct Listblock *mklist(p)$/
mklogcon	expr.c	/^struct Constblock *mklogcon(l)$/
mkname	misc.c	/^struct Nameblock *mkname(l, s)$/
mkpower	expr.c	/^LOCAL expptr mkpower(p)$/
mkprim	expr.c	/^tagptr mkprim(v, args, lstr, rstr)$/
mkrealcon	expr.c	/^struct Constblock *mkrealcon(t, d)$/
mkscalar	expr.c	/^struct Addrblock *mkscalar(np)$/
mkstfunct	exec.c	/^mkstfunct(lp, rp)$/
mkstrcon	expr.c	/^struct Constblock *mkstrcon(l,v)$/
mktemp	proc.c	/^struct Addrblock *mktemp(type, lengp)$/
mktmpn	proc.c	/^struct Addrblock *mktmpn(nelt, type, lengp)$/
mvarg	pdp11.c	/^mvarg(type, arg1, arg2)$/
mvarg1	pdp11.c	/^mvarg1(m, n)$/
namelist	proc.c	/^namelist(np)$/
ncat	putdmr.c	/^LOCAL ncat(p)$/
newentry	proc.c	/^struct Extsym *newentry(v)$/
newlabel	misc.c	/^newlabel()$/
newproc	proc.c	/^newproc()$/
nextarg	proc.c	/^LOCAL nextarg(type)$/
nextdata	data.c	/^struct Addrblock *nextdata(elenp, vlenp)$/
nodup	driver.c	/^nodup(s)$/
nounder	misc.c	/^char * nounder(n, s)$/
nsubs	equiv.c	/^LOCAL nsubs(p)$/
oneof	driver.c	/^oneof(c,s)$/
opconv	expr.c	/^expptr opconv(p, t)$/
opf	main.c	/^LOCAL FILEP opf(fn)$/
p2i	putdmr.c	/^p2i(k)$/
p2li	putdmr.c	/^LOCAL p2li(n)$/
p2offset	putdmr.c	/^LOCAL p2offset(type, offp)$/
p2op	putdmr.c	/^p2op(op)$/
p2op2	putdmr.c	/^p2op2(op, i)$/
p2reg	putdmr.c	/^p2reg(k, type)$/
p2str	putdmr.c	/^p2str(s)$/
popctl	exec.c	/^LOCAL popctl()$/
popinclude	lex.c	/^LOCAL popinclude()$/
poplab	exec.c	/^LOCAL poplab()$/
popstack	misc.c	/^popstack(p)$/
praddr	pdp11.c	/^praddr(fp, stg, varno, offset)$/
prarif	putdmr.c	/^prarif(p, neg, zero, pos)$/
prch	driver.c	/^prch(c)$/
prchars	pdp11x.c	/^prchars(fp, s)$/
prcmgoto	pdp11.c	/^prcmgoto(p, nlab, skiplabel, labarray)$/
prcomblock	pdp11x.c	/^prcomblock(fp, name)$/
prcona	pdp11.c	/^prcona(fp, a)$/
prconi	pdp11.c	/^prconi(fp, type, n)$/
prconr	pdp11.c	/^prconr(fp, type, x)$/
prdbginfo	pdp11.c	/^prdbginfo()$/
prendproc	pdp11.c	/^prendproc()$/
prentry	pdp11.c	/^prentry(s)$/
preven	pdp11.c	/^preven(k)$/
prext	pdp11.c	/^prext(name, leng, init)$/
prhead	pdp11.c	/^prhead(fp)$/
prlabel	pdp11.c	/^prlabel(fp, k)$/
prlocvar	pdp11.c	/^prlocvar(s, len)$/
procinit	init.c	/^procinit()$/
procode	proc.c	/^LOCAL procode()$/
prolog	pdp11.c	/^prolog(ep, argvec)$/
prsave	pdp11.c	/^prsave()$/
prskip	pdp11x.c	/^prskip(fp, k)$/
prspace	driver.c	/^prspace(n)$/
prtail	pdp11.c	/^prtail()$/
pruse	pdp11x.c	/^pruse(fp, s)$/
pushctl	exec.c	/^LOCAL pushctl(code)$/
putaddr	putdmr.c	/^LOCAL putaddr(p, indir)$/
putassign	put.c	/^putassign(lp, rp)$/
putbranch	putdmr.c	/^putbranch(p)$/
putcall	putdmr.c	/^LOCAL struct Addrblock *putcall(p)$/
putcat	putdmr.c	/^LOCAL putcat(lhs, rhs)$/
putch1	putdmr.c	/^LOCAL struct Addrblock *putch1(p, ncommap)$/
putchcmp	putdmr.c	/^LOCAL putchcmp(p)$/
putcheq	putdmr.c	/^LOCAL putcheq(p)$/
putchop	putdmr.c	/^LOCAL putchop(p)$/
putcmgo	putdmr.c	/^putcmgo(index, nlab, labs)$/
putcomma	putdmr.c	/^LOCAL putcomma(n, type, indir)$/
putconst	put.c	/^struct Addrblock *putconst(p)$/
putct1	putdmr.c	/^LOCAL putct1(q, lp, cp, ip, ncommap)$/
putcx1	putdmr.c	/^LOCAL struct Addrblock *putcx1(p, ncommap)$/
putcxcmp	putdmr.c	/^LOCAL putcxcmp(p)$/
putcxeq	putdmr.c	/^LOCAL putcxeq(p)$/
putcxop	putdmr.c	/^LOCAL putcxop(p)$/
puteof	putdmr.c	/^puteof()$/
puteq	put.c	/^puteq(lp, rp)$/
putex1	put.c	/^putex1(p)$/
putexpr	putdmr.c	/^putexpr(p)$/
putforce	putdmr.c	/^putforce(t, p)$/
putgoto	putdmr.c	/^putgoto(label)$/
puthead	putdmr.c	/^puthead(s, class)$/
putif	putdmr.c	/^putif(p,l)$/
putio	io.c	/^LOCAL putio(nelt, addr)$/
putiocall	io.c	/^LOCAL putiocall(q)$/
putlabel	putdmr.c	/^putlabel(label)$/
putmnmx	putdmr.c	/^LOCAL putmnmx(p)$/
putnreg	putdmr.c	/^putnreg()$/
putop	putdmr.c	/^LOCAL putop(p)$/
putpower	putdmr.c	/^LOCAL putpower(p)$/
putsteq	put.c	/^putsteq(a, b)$/
putstmt	putdmr.c	/^putstmt()$/
putstr	put.c	/^putstr(fp, s, n)$/
putx	putdmr.c	/^putx(p)$/
rdlong	driver.c	/^rdlong(n)$/
rdname	driver.c	/^rdname(vargroupp, name)$/
realpart	put.c	/^struct Addrblock *realpart(p)$/
retval	proc.c	/^LOCAL retval(t)$/
rmf	driver.c	/^rmf(fn)$/
rmfiles	driver.c	/^rmfiles()$/
saywhere	error.c	/^saywhere(s)$/
setbound	proc.c	/^setbound(v, nd, dims)$/
setdata	data.c	/^setdata(varp, valp, elen, vlen)$/
setdoto	driver.c	/^char *setdoto(s)$/
setext	proc.c	/^setext(v)$/
setfmt	io.c	/^setfmt(lp)$/
setimpl	init.c	/^setimpl(type, length, c1, c2)$/
setintr	proc.c	/^setintr(v)$/
setlog	put.c	/^setlog()$/
settype	proc.c	/^settype(v, type, length)$/
shorten	expr.c	/^expptr shorten(p)$/
startioctl	io.c	/^startioctl()$/
startproc	proc.c	/^startproc(progname, class)$/
startrw	io.c	/^startrw()$/
stfcall	expr.c	/^LOCAL struct Exprblock *stfcall(np, actlist)$/
subcheck	expr.c	/^expptr subcheck(np, p)$/
suboffset	expr.c	/^expptr suboffset(p)$/
sys	driver.c	/^sys(str)$/
texec	driver.c	/^texec(f, av)$/
unreadable	driver.c	/^unreadable(s)$/
vardcl	expr.c	/^vardcl(v)$/
varstr	misc.c	/^char * varstr(n, s)$/
varunder	misc.c	/^char * varunder(n, s)$/
warn	error.c	/^warn(s)$/
warn1	error.c	/^warn1(s,t)$/
yyerror	error.c	/^yyerror(s)$/
yylex	lex.c	/^yylex()$/
zdiv	expr.c	/^LOCAL zdiv(c, a, b)$/
